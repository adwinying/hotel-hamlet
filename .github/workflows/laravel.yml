name: Laravel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_frontend:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.4
      with:
        node-version: '14'
        check-latest:

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Install node dependencies
      run: npm ci

    - name: Build for production
      run: npm run prod

    - name: Save frontend build
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: public/


  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Setup PHP Environment
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache PHP dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install PHP dependencies
      run: composer install -q --no-interaction --no-progress --no-scripts --prefer-dist

    - name: Run phpCS linter
      run: vendor/bin/phpcs --standard=phpcs.xml

    - name: Run php_cs_fixer linter
      run: vendor/bin/php-cs-fixer -v fix --diff-format udiff --dry-run


  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build_frontend
    steps:
    - name: Setup PHP Environment
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'

    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Retrieve compiled frontend build
      uses: actions/download-artifact@v2
      with:
        name: frontend
        path: public/

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache PHP dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install PHP dependencies
      run: composer install -q --no-interaction --no-progress --no-scripts --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
