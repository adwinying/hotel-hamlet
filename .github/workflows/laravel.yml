name: Laravel

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install tools
      uses: jdx/mise-action@v2

    - name: Install PHP dependencies
      run: composer install -q --no-interaction --no-progress --no-scripts --prefer-dist

    - name: Run phpCS linter
      run: vendor/bin/phpcs --standard=phpcs.xml

    - name: Run pint linter
      run: vendor/bin/pint -v --test

    - name: Run phpstan static analysis
      run: vendor/bin/phpstan analyse --memory-limit=256M


  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: hotel-hamlet
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install tools
      uses: jdx/mise-action@v2

    - name: Install PHP dependencies
      run: composer install -q --no-interaction --no-progress --no-scripts --prefer-dist

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Generate key
      run: php artisan key:generate

    - name: Generate typescript types
      run: composer ts

    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Install node dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: hotel-hamlet
        DB_USERNAME: root
        DB_PASSWORD: secret
      run: vendor/bin/phpunit


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/master'
    permissions:
      packages: write
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install tools
      uses: jdx/mise-action@v2

    - name: Set up Docker Buildx for cache
      uses: docker/setup-buildx-action@v3

    - name: Expose GitHub Runtime for cache
      uses: crazy-max/ghaction-github-runtime@v3

    - name: Set up Tailscale
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:deploy

    - name: Build, push and deploy
      run: kamal deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APP_KEY: ${{ secrets.APP_KEY }}
